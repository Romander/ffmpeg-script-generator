{"version":3,"sources":["App/components/AddInputParam/AddInputParam.tsx","App/components/Checkbox/Checkbox.tsx","App/components/EditInputParam/EditInputParam.tsx","App/components/Input/Input.tsx","App/components/ScriptVisualizer/components/ScriptVisualizerView/ScriptVisualizerView.tsx","App/components/ScriptVisualizer/ScriptVisualizer.tsx","App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AddInputParam","props","nameRef","React","useRef","durationRef","className","ref","onClick","onAddInput","id","uuidv4","name","current","value","duration","Number","parseFloat","Checkbox","inputRef","type","onChange","title","EditInputParam","onChangeInput","onDeleteInput","handleChangeNameInput","useCallback","event","inputParam","target","handleChangeDurationInput","handleDeleteInput","defaultValue","Input","ScriptVisualizerView","children","ScriptVisualizer","enableNvideaDecode","inputs","map","input","filterComplexVideosSettings","setting","index","filterComplexAudiosSettings","xfades","xfade","length","acrossfades","acrossfade","enableNvideaEncode","mapping","outputFilename","App","useState","setEnableNvideaDecode","setEnableNvideaEncode","isScriptGeneratingSeparately","setIsScriptGeneratingSeparately","transition","setTransition","setInputs","setOutputFilename","handleAddInput","newInput","oldInputs","filter","handleChangeInput","console","log","handleChangeTransition","newTransition","handleChangeOutputFilename","newFilename","handleChangeNvideaDecodeCheckbox","handleChangeNvideaEncodeCheckbox","handleChangeIsScriptGeneratingSeparately","getXfade","i","lastIndex","offset","transitionDurationSec","getFilterComplexVideoSetting","getAcrossfade","getFilterComplexAudioSetting","durationSec","script","priveousOffset","toFixed","getScript","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iXAUA,SAASA,EAAcC,GACrB,IAAMC,EAAUC,IAAMC,OAAyB,MACzCC,EAAcF,IAAMC,OAAyB,MAEnD,OACE,sBAAKE,UAAU,kBAAf,UACE,wCAEE,uBAAOC,IAAKL,OAEd,4CAEE,uBAAOK,IAAKF,IAFd,sBAKA,8BACE,wBACEG,QAAS,4BACPP,EAAMQ,WAAW,CACfC,GAAIC,cACJC,KAAI,UAAEV,EAAQW,eAAV,aAAE,EAAiBC,MACvBC,SAAUC,OAAOC,WAAP,oBAAkBZ,EAAYQ,eAA9B,aAAkB,EAAqBC,aAAvC,QAAgD,OALhE,oB,MCjBR,SAASI,EAASjB,GAChB,IAAMkB,EAAWhB,IAAMC,OAAyB,MAEhD,OACE,sBAAKE,UAAW,WAAhB,UACE,uBACEc,KAAK,WACLb,IAAKY,EACLE,SAAU,kBAAMpB,EAAMoB,UAAS,MAEjC,8BAAMpB,EAAMqB,W,iBCRlB,SAASC,EAAetB,GAA6B,IAAD,IAC1CuB,EAAiCvB,EAAjCuB,cAAeC,EAAkBxB,EAAlBwB,cAEjBC,EAAwBvB,IAAMwB,aAClC,SAACC,GACCJ,EAAc,2BACTvB,EAAM4B,YADE,IAEXjB,KAAMgB,EAAME,OAAOhB,WAGvB,CAACU,EAAevB,EAAM4B,aAGlBE,EAA4B5B,IAAMwB,aACtC,SAACC,GACCJ,EAAc,2BACTvB,EAAM4B,YADE,IAEXd,SAAUC,OAAOC,WAAWW,EAAME,OAAOhB,YAG7C,CAACb,EAAM4B,WAAYL,IAGfQ,EAAoB7B,IAAMwB,aAAY,WAAO,IAAD,IAChDF,EAAa,oBAACxB,EAAM4B,kBAAP,aAAC,EAAkBnB,UAAnB,QAAyB,QACrC,CAACT,EAAM4B,WAAYJ,IAEtB,OACE,sBAAKnB,UAAU,mBAAf,UACE,wCAEE,uBACE2B,aAAY,UAAEhC,EAAM4B,kBAAR,aAAE,EAAkBjB,KAChCS,SAAUK,OAGd,4CAEE,uBACEO,aAAY,UAAEhC,EAAM4B,kBAAR,aAAE,EAAkBd,SAChCM,SAAUU,IAJd,sBAQA,8BACE,wBAAQvB,QAASwB,EAAjB,oB,MC9CR,SAASE,EAAMjC,GACb,OACE,sBAAKK,UAAW,QAAhB,UACE,uBACE2B,aAAchC,EAAMa,MACpBO,SAAU,SAACO,GAAD,OACR3B,EAAMoB,SAASO,EAAME,OAAOhB,UAGhC,8BAAMb,EAAMqB,W,MCXlB,SAASa,EAAqBlC,GAC5B,OAAO,qBAAKK,UAAW,yBAAhB,SAA2CL,EAAMmC,WCO1D,SAASC,EAAiBpC,GAAgC,IAAD,QACvD,OACE,eAAC,EAAD,WACE,4CACA,8CACCA,EAAMqC,oBAAsB,qDAC5BrC,EAAMsC,OAAOC,KAAI,SAACC,GAAD,OAChB,uCAAUA,EAAM7B,KAAhB,aAEF,+DAEGX,EAAMyC,mCAFT,aAEG,EAAmCF,KAAI,SAACG,EAASC,GAAV,OACtC,gCACa,IAAVA,EAAc,IAAM,KACpBD,EAFH,YAHJ,UAQG1C,EAAM4C,mCART,aAQG,EAAmCL,KAAI,SAACG,GAAD,OACtC,gCAAMA,EAAN,eAGJ,0CACG1C,EAAM6C,cADT,aACG,EAAcN,KAAI,SAACO,EAAOH,GAAR,eACjB,gCACGG,GACA,UAAA9C,EAAM6C,cAAN,eAAcE,SAAUJ,KAAU,UAAA3C,EAAM6C,cAAN,eAAcE,QAAS,EACtD,IACA,KAJN,WAFJ,UAUG/C,EAAMgD,mBAVT,aAUG,EAAmBT,KAAI,SAACU,EAAYN,GAAb,eACtB,gCACGM,GACA,UAAAjD,EAAMgD,mBAAN,eAAmBD,SACpBJ,KAAU,UAAA3C,EAAMgD,mBAAN,eAAmBD,QAAS,EAClC,IACA,KALN,cAUH/C,EAAMkD,oBAAsB,qDAC7B,8CACA,gCACGlD,EAAMmD,QADT,KACoBnD,EAAMoD,eAD1B,a,MCqOSC,MAtRf,WAAgB,IAAD,EACuCnD,IAAMoD,UACxD,GAFW,mBACNjB,EADM,KACckB,EADd,OAIuCrD,IAAMoD,UACxD,GALW,mBAINJ,EAJM,KAIcM,EAJd,OAUTtD,IAAMoD,UAAkB,GAVf,mBAQXG,EARW,KASXC,EATW,OAYuBxD,IAAMoD,SAAiB,GAZ9C,mBAYNK,EAZM,KAYMC,EAZN,OAae1D,IAAMoD,SAAmC,IAbxD,mBAaNhB,EAbM,KAaEuB,EAbF,OAc+B3D,IAAMoD,SAAiB,WAdtD,mBAcNF,EAdM,KAcUU,EAdV,KAgBPC,EAAiB7D,IAAMwB,aAC3B,SAACsC,GACKA,GACFH,GAAU,SAACI,GAAD,4BAAmBA,GAAnB,CAA8BD,SAG5C,IAGIjC,EAAoB7B,IAAMwB,aAAY,SAACjB,GACvCA,GACFoD,GAAU,SAACI,GAAD,OAAeA,EAAUC,QAAO,SAAC1B,GAAD,OAAWA,EAAM/B,KAAOA,UAEnE,IAEG0D,EAAoBjE,IAAMwB,aAC9B,SAACsC,GACKA,IACFI,QAAQC,IAAIL,GAEZH,GAAU,SAACI,GAOT,OANAG,QAAQC,IAAIJ,GACZG,QAAQC,IACNJ,EAAU1B,KAAI,SAACC,GAAD,OACZA,EAAM/B,KAAOuD,EAASvD,GAAKuD,EAAWxB,MAGnCyB,EAAU1B,KAAI,SAACC,GAAD,OACnBA,EAAM/B,KAAOuD,EAASvD,GAAKuD,EAAWxB,WAK9C,IAGI8B,EAAyBpE,IAAMwB,aACnC,SAAC6C,GACKA,GAAiBxD,OAAOC,WAAWuD,IACrCX,EAAc7C,OAAOC,WAAWuD,MAGpC,IAGIC,EAA6BtE,IAAMwB,aACvC,SAAC+C,GACKA,GACFX,EAAkBW,KAGtB,IAGIC,EAAmCxE,IAAMwB,aAAY,WACzD6B,GAAsB,SAAC1C,GAAD,OAAYA,OACjC,IAEG8D,EAAmCzE,IAAMwB,aAAY,WACzD8B,GAAsB,SAAC3C,GAAD,OAAYA,OACjC,IAEG+D,EAA2C1E,IAAMwB,aAAY,WACjEgC,GAAgC,SAAC7C,GAAD,OAAYA,OAC3C,IAuDGgE,EAAW,SACfC,EACAC,EACAC,EACAC,GAJe,gBAMN,IAANH,EAAA,WAAcA,EAAd,mBAA4BA,EAA5B,KANY,YAObA,EAAI,EAPS,6CAQsBG,EARtB,mBAQsDD,GARtD,OASbF,EAAI,IAAMC,EAAY,EAAI,yBAA1B,YAA0DD,EAAI,EAA9D,QAGEI,EAA+B,SAACJ,GAAD,iBAC/BA,EAD+B,uBACfA,EADe,SAG/BK,EAAgB,SACpBL,EACAC,EACAE,GAHoB,gBAKX,IAANH,EAAA,WAAcA,EAAd,mBAA4BA,EAA5B,KALiB,YAMlBA,EAAI,EANc,2BAODG,EAPC,yBAQlBH,EAAI,IAAMC,EAAY,EAAI,UAA1B,YAA2CD,EAAI,EAA/C,QAGEM,EAA+B,SAACN,EAAWO,GAAZ,iBAC/BP,EAD+B,oBAClBO,EADkB,YACHP,EADG,SAG/BQ,EAlFY,SAChBL,GAYA,IALA,IAAIM,EAAiB,EACjB9C,EAA6C,GAC7CG,EAA6C,GAC7CC,EAAwB,GACxBG,EAA6B,GACxB8B,EAAI,EAAGA,EAAIxC,EAAOS,OAAQ+B,IAAK,CAAC,IAAD,EAWtC,GAVAlC,EAA2B,sBACtBA,GADsB,CAEzBwC,EAA6BN,EAAD,UAAIxC,EAAOwC,GAAGhE,gBAAd,QAA0B,KAGxD2B,EAA2B,sBACtBA,GADsB,CAEzByC,EAA6BJ,KAG3BA,EAAIxC,EAAOS,OAAS,EAAG,CAAC,IAAD,EACzBC,EAAW,sBACNA,GADM,CAETmC,EAAcL,EAAGxC,EAAOS,OAAQkC,KAGlC,IAAMD,KACJ,UAAC1C,EAAOwC,GAAGhE,gBAAX,QAAuB,GACvByE,EACAN,GACAO,QAAQ,GAEVD,EAAiBP,EAEjBnC,EAAM,sBACDA,GADC,CAEJgC,EAASC,EAAGxC,EAAOS,OAAQiC,EAAQC,MAKzC,MAAO,CACLxC,8BACAG,8BACAC,SACAG,eAiCWyC,CAAU9B,GAEzB,OACE,qBAAKtD,UAAU,MAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,QAAf,oCACA,qBAAKA,UAAU,gBAAf,sIAKA,qBAAKA,UAAU,cAAf,wBACA,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,OAAf,0KAKA,cAAC,EAAD,CAAeG,WAAYuD,IAC1BzB,EAAOC,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CAEEZ,WAAYY,EACZjB,cAAe4C,EACf3C,cAAeO,GAHVS,EAAM/B,UAQjB,qBAAKJ,UAAU,cAAf,2BACA,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,OAAf,kDACA,cAAC,EAAD,CACEQ,MAAO8C,EAAW+B,WAClBrE,MAAO,uCACPD,SAAUkD,IAEZ,cAAC,EAAD,CACEzD,MAAOuC,EACP/B,MAAO,kBACPD,SAAUoD,OAId,qBAAKnE,UAAU,cAAf,iCACA,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,OAAf,sUAOA,cAAC,EAAD,CACEgB,MAAO,oCACPD,SAAUsD,IAEZ,cAAC,EAAD,CACErD,MAAO,oCACPD,SAAUuD,IAEZ,cAAC,EAAD,CACEtD,MACE,iFAEFD,SAAUwD,OAIbnB,EACC,qCACE,cAACrB,EAAD,CACEC,mBAAoBA,EACpBa,mBAAoBA,EACpBZ,OAAQA,EACRG,4BAA6B6C,EAAO7C,4BACpCI,OAAQyC,EAAOzC,OACfM,QAAS,iBACTC,eAAgB,YAGlB,cAAChB,EAAD,CACEC,mBAAoBA,EACpBa,mBAAoBA,EACpBZ,OAAQA,EACRM,4BAA6B0C,EAAO1C,4BACpCI,YAAasC,EAAOtC,YACpBG,QAAS,iBACTC,eAAgB,YAGlB,eAAC,EAAD,gEACqD,IAClDA,QAIL,cAAChB,EAAD,CACEC,mBAAoBA,EACpBa,mBAAoBA,EACpBZ,OAAQA,EACRG,4BAA6B6C,EAAO7C,4BACpCG,4BAA6B0C,EAAO1C,4BACpCC,OAAQyC,EAAOzC,OACfG,YAAasC,EAAOtC,YACpBG,QAAS,gCACTC,eAAgBA,UC3QbuC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.621e794c.chunk.js","sourcesContent":["import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { IFFmpegInputParam } from \"../../types\";\n\nimport \"./AddInputParam.css\";\n\ninterface IAddInputParamProps {\n  onAddInput: (newInput: IFFmpegInputParam | null) => void;\n}\n\nfunction AddInputParam(props: IAddInputParamProps) {\n  const nameRef = React.useRef<HTMLInputElement>(null);\n  const durationRef = React.useRef<HTMLInputElement>(null);\n\n  return (\n    <div className=\"add-input-param\">\n      <div>\n        name:\n        <input ref={nameRef} />\n      </div>\n      <div>\n        duration:\n        <input ref={durationRef} />\n        (seconds, float)\n      </div>\n      <div>\n        <button\n          onClick={() =>\n            props.onAddInput({\n              id: uuidv4(),\n              name: nameRef.current?.value,\n              duration: Number.parseFloat(durationRef.current?.value ?? \"\"),\n            })\n          }\n        >\n          +\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport { AddInputParam };\n","import React from \"react\";\n\nimport \"./Checkbox.css\";\n\ninterface ICheckboxProps {\n  title: string;\n  onChange: (changed: boolean) => void;\n}\n\nfunction Checkbox(props: ICheckboxProps) {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  return (\n    <div className={\"checkbox\"}>\n      <input\n        type=\"checkbox\"\n        ref={inputRef}\n        onChange={() => props.onChange(true)}\n      />\n      <div>{props.title}</div>\n    </div>\n  );\n}\n\nexport { Checkbox };\n","import React from \"react\";\nimport { IFFmpegInputParam } from \"../../types\";\n\nimport \"./EditInputParam.css\";\n\ninterface IEditnputParamProps {\n  inputParam: IFFmpegInputParam;\n  onChangeInput: (updatedValue: IFFmpegInputParam | null) => void;\n  onDeleteInput: (deletedValue: string | null) => void;\n}\n\nfunction EditInputParam(props: IEditnputParamProps) {\n  const { onChangeInput, onDeleteInput } = props;\n\n  const handleChangeNameInput = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onChangeInput({\n        ...props.inputParam,\n        name: event.target.value,\n      } as IFFmpegInputParam);\n    },\n    [onChangeInput, props.inputParam]\n  );\n\n  const handleChangeDurationInput = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      onChangeInput({\n        ...props.inputParam,\n        duration: Number.parseFloat(event.target.value),\n      } as IFFmpegInputParam);\n    },\n    [props.inputParam, onChangeInput]\n  );\n\n  const handleDeleteInput = React.useCallback(() => {\n    onDeleteInput(props.inputParam?.id ?? null);\n  }, [props.inputParam, onDeleteInput]);\n\n  return (\n    <div className=\"edit-input-param\">\n      <div>\n        name:\n        <input\n          defaultValue={props.inputParam?.name}\n          onChange={handleChangeNameInput}\n        />\n      </div>\n      <div>\n        duration:\n        <input\n          defaultValue={props.inputParam?.duration}\n          onChange={handleChangeDurationInput}\n        />\n        (seconds, float)\n      </div>\n      <div>\n        <button onClick={handleDeleteInput}>-</button>\n      </div>\n    </div>\n  );\n}\n\nexport { EditInputParam };\n","import React from \"react\";\n\nimport \"./Input.css\";\n\ninterface IInputProps {\n  value?: string;\n  title: string;\n  onChange: (newInput: string | null) => void;\n}\n\nfunction Input(props: IInputProps) {\n  return (\n    <div className={\"input\"}>\n      <input\n        defaultValue={props.value}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          props.onChange(event.target.value)\n        }\n      />\n      <div>{props.title}</div>\n    </div>\n  );\n}\n\nexport { Input };\n","import React from \"react\";\n\nimport \"./ScriptVisualizerView.css\";\n\ninterface IScriptVisualizerViewProps {\n  children: React.ReactNode;\n}\n\nfunction ScriptVisualizerView(props: IScriptVisualizerViewProps) {\n  return <div className={\"script-visualizer-view\"}>{props.children}</div>;\n}\n\nexport { ScriptVisualizerView };\n","import React from \"react\";\nimport { IFFmpegInputParam } from \"../../types\";\nimport { ScriptVisualizerView } from \"./components/ScriptVisualizerView/ScriptVisualizerView\";\n\ninterface IScriptVisualizerProps {\n  enableNvideaDecode: boolean;\n  enableNvideaEncode: boolean;\n  inputs: Array<IFFmpegInputParam>;\n  filterComplexVideosSettings?: Array<string>;\n  filterComplexAudiosSettings?: Array<string>;\n  xfades?: Array<string>;\n  acrossfades?: Array<string>;\n  mapping: string;\n  outputFilename: string;\n}\n\nfunction ScriptVisualizer(props: IScriptVisualizerProps) {\n  return (\n    <ScriptVisualizerView>\n      <div>ffmpeg \\</div>\n      <div>-vsync 0 \\</div>\n      {props.enableNvideaDecode && <div>-c:v h264_cuvid \\</div>}\n      {props.inputs.map((input) => (\n        <div>-i \"{input.name}\" \\</div>\n      ))}\n      <div>\n        -filter_complex \\\n        {props.filterComplexVideosSettings?.map((setting, index) => (\n          <div>\n            {index === 0 ? '\"' : null}\n            {setting} \\\n          </div>\n        ))}\n        {props.filterComplexAudiosSettings?.map((setting) => (\n          <div>{setting} \\</div>\n        ))}\n      </div>\n      <div>\n        {props.xfades?.map((xfade, index) => (\n          <div>\n            {xfade}\n            {props.xfades?.length && index === props.xfades?.length - 1\n              ? \";\"\n              : null}\n            \\\n          </div>\n        ))}\n        {props.acrossfades?.map((acrossfade, index) => (\n          <div>\n            {acrossfade}\n            {props.acrossfades?.length &&\n            index === props.acrossfades?.length - 1\n              ? '\"'\n              : null}\n            \\\n          </div>\n        ))}\n      </div>\n      {props.enableNvideaEncode && <div>-c:v h264_nvenc \\</div>}\n      <div>-b:v 10M \\</div>\n      <div>\n        {props.mapping} \"{props.outputFilename}\" \\\n      </div>\n    </ScriptVisualizerView>\n  );\n}\n\nexport { ScriptVisualizer };\n","import React from \"react\";\nimport { AddInputParam } from \"./components/AddInputParam/AddInputParam\";\nimport { Checkbox } from \"./components/Checkbox/Checkbox\";\nimport { EditInputParam } from \"./components/EditInputParam/EditInputParam\";\nimport { Input } from \"./components/Input/Input\";\nimport { ScriptVisualizerView } from \"./components/ScriptVisualizer/components/ScriptVisualizerView/ScriptVisualizerView\";\nimport { ScriptVisualizer } from \"./components/ScriptVisualizer/ScriptVisualizer\";\nimport { IFFmpegInputParam } from \"./types\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [enableNvideaDecode, setEnableNvideaDecode] = React.useState<boolean>(\n    false\n  );\n  const [enableNvideaEncode, setEnableNvideaEncode] = React.useState<boolean>(\n    false\n  );\n  const [\n    isScriptGeneratingSeparately,\n    setIsScriptGeneratingSeparately,\n  ] = React.useState<boolean>(false);\n\n  const [transition, setTransition] = React.useState<number>(1);\n  const [inputs, setInputs] = React.useState<Array<IFFmpegInputParam>>([]);\n  const [outputFilename, setOutputFilename] = React.useState<string>(\"out.mp4\");\n\n  const handleAddInput = React.useCallback(\n    (newInput: IFFmpegInputParam | null) => {\n      if (newInput) {\n        setInputs((oldInputs) => [...oldInputs, newInput]);\n      }\n    },\n    []\n  );\n\n  const handleDeleteInput = React.useCallback((id: string | null) => {\n    if (id) {\n      setInputs((oldInputs) => oldInputs.filter((input) => input.id !== id));\n    }\n  }, []);\n\n  const handleChangeInput = React.useCallback(\n    (newInput: IFFmpegInputParam | null) => {\n      if (newInput) {\n        console.log(newInput);\n\n        setInputs((oldInputs) => {\n          console.log(oldInputs);\n          console.log(\n            oldInputs.map((input) =>\n              input.id === newInput.id ? newInput : input\n            )\n          );\n          return oldInputs.map((input) =>\n            input.id === newInput.id ? newInput : input\n          );\n        });\n      }\n    },\n    []\n  );\n\n  const handleChangeTransition = React.useCallback(\n    (newTransition: string | null) => {\n      if (newTransition && Number.parseFloat(newTransition)) {\n        setTransition(Number.parseFloat(newTransition));\n      }\n    },\n    []\n  );\n\n  const handleChangeOutputFilename = React.useCallback(\n    (newFilename: string | null) => {\n      if (newFilename) {\n        setOutputFilename(newFilename);\n      }\n    },\n    []\n  );\n\n  const handleChangeNvideaDecodeCheckbox = React.useCallback(() => {\n    setEnableNvideaDecode((value) => !value);\n  }, []);\n\n  const handleChangeNvideaEncodeCheckbox = React.useCallback(() => {\n    setEnableNvideaEncode((value) => !value);\n  }, []);\n\n  const handleChangeIsScriptGeneratingSeparately = React.useCallback(() => {\n    setIsScriptGeneratingSeparately((value) => !value);\n  }, []);\n\n  const getScript = (\n    transitionDurationSec: number\n  ): {\n    filterComplexVideosSettings: Array<string>;\n    filterComplexAudiosSettings: Array<string>;\n    xfades: Array<string>;\n    acrossfades: Array<string>;\n  } => {\n    var priveousOffset = 0;\n    var filterComplexVideosSettings: Array<string> = [];\n    var filterComplexAudiosSettings: Array<string> = [];\n    var xfades: Array<string> = [];\n    var acrossfades: Array<string> = [];\n    for (var i = 0; i < inputs.length; i++) {\n      filterComplexAudiosSettings = [\n        ...filterComplexAudiosSettings,\n        getFilterComplexAudioSetting(i, inputs[i].duration ?? 0),\n      ];\n\n      filterComplexVideosSettings = [\n        ...filterComplexVideosSettings,\n        getFilterComplexVideoSetting(i),\n      ];\n\n      if (i < inputs.length - 1) {\n        acrossfades = [\n          ...acrossfades,\n          getAcrossfade(i, inputs.length, transitionDurationSec),\n        ];\n\n        const offset = +(\n          (inputs[i].duration ?? 0) +\n          priveousOffset -\n          transitionDurationSec\n        ).toFixed(3);\n\n        priveousOffset = offset;\n\n        xfades = [\n          ...xfades,\n          getXfade(i, inputs.length, offset, transitionDurationSec),\n        ];\n      }\n    }\n\n    return {\n      filterComplexVideosSettings,\n      filterComplexAudiosSettings,\n      xfades,\n      acrossfades,\n    };\n  };\n\n  const getXfade = (\n    i: number,\n    lastIndex: number,\n    offset: number,\n    transitionDurationSec: number\n  ): string =>\n    `${i === 0 ? `[${i}:v]` : `[v${i}]`}[${\n      i + 1\n    }:v]xfade=transition=fade:duration=${transitionDurationSec}:offset=${offset}${\n      i + 1 === lastIndex - 1 ? \",format=yuv420p[video]\" : `[v${i + 1}];`\n    }`;\n\n  const getFilterComplexVideoSetting = (i: number) =>\n    `[${i}]settb=AVTB[${i}:v];`;\n\n  const getAcrossfade = (\n    i: number,\n    lastIndex: number,\n    transitionDurationSec: number\n  ) =>\n    `${i === 0 ? `[${i}:a]` : `[a${i}]`}[${\n      i + 1\n    }:a]acrossfade=d=${transitionDurationSec}:c1=tri:c2=tri${\n      i + 1 === lastIndex - 1 ? \"[audio]\" : `[a${i + 1}];`\n    }`;\n\n  const getFilterComplexAudioSetting = (i: number, durationSec: number) =>\n    `[${i}]atrim=0:${durationSec}[${i}:a];`;\n\n  const script = getScript(transition);\n\n  return (\n    <div className=\"app\">\n      <div className=\"layout\">\n        <div className=\"title\">Generate FFmpeg script</div>\n        <div className=\"title-message\">\n          Generator FFmpeg CLI command for concatenation several videos into\n          single one using filter complex xfade and acrossfade.\n        </div>\n\n        <div className=\"group-title\">Add inputs</div>\n        <div className=\"inputs-container\">\n          <div className=\"text\">\n            Input files will be generated into the format -i \"name\" in result\n            script, duration should be specified to generate correct xfade\n            offset and atrim for audio.\n          </div>\n          <AddInputParam onAddInput={handleAddInput} />\n          {inputs.map((input) => (\n            <EditInputParam\n              key={input.id}\n              inputParam={input}\n              onChangeInput={handleChangeInput}\n              onDeleteInput={handleDeleteInput}\n            />\n          ))}\n        </div>\n\n        <div className=\"group-title\">Modify params</div>\n        <div className=\"params-container\">\n          <div className=\"text\">Change duration and output filename.</div>\n          <Input\n            value={transition.toString()}\n            title={\"Transition duration (seconds, float)\"}\n            onChange={handleChangeTransition}\n          />\n          <Input\n            value={outputFilename}\n            title={\"Output filename\"}\n            onChange={handleChangeOutputFilename}\n          />\n        </div>\n\n        <div className=\"group-title\">Check some features</div>\n        <div className=\"checkboxes-container\">\n          <div className=\"text\">\n            If your ffmepg has nvidea feature it would be better turned on this\n            checkboxes (Enable nvidea decoder, Enable nvidea encoder) for the\n            performance boost. \"Generate audio and video scripts separately\" if\n            you have a lot of videos I recommend to use separate generation\n            video and audio because of better performance.\n          </div>\n          <Checkbox\n            title={\"Enable nvidea decoder (using gpu)\"}\n            onChange={handleChangeNvideaDecodeCheckbox}\n          />\n          <Checkbox\n            title={\"Enable nvidea encoder (using gpu)\"}\n            onChange={handleChangeNvideaEncodeCheckbox}\n          />\n          <Checkbox\n            title={\n              \"Generate audio and video scripts separately? (separate scripts more effective)\"\n            }\n            onChange={handleChangeIsScriptGeneratingSeparately}\n          />\n        </div>\n\n        {isScriptGeneratingSeparately ? (\n          <>\n            <ScriptVisualizer\n              enableNvideaDecode={enableNvideaDecode}\n              enableNvideaEncode={enableNvideaEncode}\n              inputs={inputs}\n              filterComplexVideosSettings={script.filterComplexVideosSettings}\n              xfades={script.xfades}\n              mapping={'-map \"[video]\"'}\n              outputFilename={\"out.mp4\"}\n            />\n\n            <ScriptVisualizer\n              enableNvideaDecode={enableNvideaDecode}\n              enableNvideaEncode={enableNvideaEncode}\n              inputs={inputs}\n              filterComplexAudiosSettings={script.filterComplexAudiosSettings}\n              acrossfades={script.acrossfades}\n              mapping={'-map \"[audio]\"'}\n              outputFilename={\"out.wav\"}\n            />\n\n            <ScriptVisualizerView>\n              ffmpeg -i \"out.mp4\" -i \"out.wav\"-c:v copy -c:a aac{\" \"}\n              {outputFilename}\n            </ScriptVisualizerView>\n          </>\n        ) : (\n          <ScriptVisualizer\n            enableNvideaDecode={enableNvideaDecode}\n            enableNvideaEncode={enableNvideaEncode}\n            inputs={inputs}\n            filterComplexVideosSettings={script.filterComplexVideosSettings}\n            filterComplexAudiosSettings={script.filterComplexAudiosSettings}\n            xfades={script.xfades}\n            acrossfades={script.acrossfades}\n            mapping={'-map \"[audio]\" -map \"[video]\"'}\n            outputFilename={outputFilename}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}